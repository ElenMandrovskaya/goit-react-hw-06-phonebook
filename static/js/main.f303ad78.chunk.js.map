{"version":3,"sources":["App/App.styled.js","redux/contacts/contacts-actions.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","components/Title/Title.styled.js","components/Title/Title.js","App/App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js"],"names":["Main","styled","main","Section","section","MainTitle","h1","addContact","createAction","name","number","payload","id","uuidv4","removeContact","filterContacts","Form","form","Label","label","Input","input","Button","button","ContactForm","useState","setName","setNumber","nameId","telId","dispatch","useDispatch","handleChange","evt","currentTarget","value","resetForm","onSubmit","preventDefault","htmlFor","type","onChange","pattern","title","placeholder","required","List","ul","Item","li","ContactList","contacts","useSelector","state","items","filter","item","toLowerCase","includes","map","onClick","Filter","e","h2","Title","App","initContacts","JSON","parse","localStorage","getItem","defaultContacts","itemReducer","createReducer","action","existingName","find","contact","toast","info","checkContact","setItem","stringify","filterReducer","rootReducer","combineReducers","store","configureStore","reducer","devtools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f303ad78.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Main = styled.main`\ndisplay: flex;\nflex-wrap: wrap;\njustify-content: space-between;\ntext-align: center;\nmargin: 20px auto;\npadding: 20px;\nbackground-color: #fff;\nwidth: 900px;\nbox-shadow: 0px 0px 8px 0px rgba(34, 60, 80, 0.2);\n`;\n\nexport const Section = styled.section`\n  /* padding: 40px 0; */\n`;\nexport const MainTitle = styled.h1`\n  text-align: center;\n  padding-top: 15px;\n  padding-bottom: 15px;\n  color: #9e1878;\n`;\n","import { v4 as uuidv4 } from 'uuid';\nimport { createAction } from \"@reduxjs/toolkit\";\n// import contactsTypes from './contacts-types'  /* ====== REDUX ======*/\n\n//========== REDUX TOOLKIT ===========\n\nexport const addContact = createAction(\"contacts/add\", ({name, number}) => ({\n    payload: {\n        id: uuidv4(),\n        name,\n        number,\n    }\n}));\nexport const removeContact = createAction(\"contacts/remove\");\nexport const filterContacts = createAction(\"contacts/filter\");\n\n\n// =========== REDUX =================\n\n// export const addContact = ({name, number}) => ({\n//     type: contactsTypes.ADD,\n//     payload: {\n//         id: uuidv4(),\n//         name,\n//         number,\n//     }\n// });\n\n// export const removeContact = (id) => ({\n//     type: contactsTypes.REMOVE, \n//     payload: id,\n// });\n\n// export const filterContacts = (value) => ({\n//     type: contactsTypes.FILTER, \n//     payload: value,\n// });","import styled from \"@emotion/styled\";\n\nexport const Form = styled.form`\n`;\n\nexport const Label = styled.label`\ndisplay: flex;\nflex-direction: column;\nwidth: 400px;\nmargin-bottom: 20px;\n`;\n\nexport const Input = styled.input`\nheight: 40px;\nborder: 1px solid #ff0d82;\nborder-radius: 4px;\nfont-size: 16px;\nmargin-top: 10px;\n&:focus {\n    outline: none;\n    border: 1px solid #9e1878;\n}\n`;\n\nexport const Button = styled.button`\n  min-width: 100px;\n  height: 30px;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 12px;\n  color: #fff;\n  text-transform: uppercase;\n  background-color: #ff0d82;\n  box-shadow: 0px 0px 8px 0px rgba(34, 60, 80, 0.2);\n  border: none;\n  \n`;","import { useState } from 'react';\n// import PropTypes from \"prop-types\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from '../../redux/contacts/contacts-actions';\nimport { Form, Label, Input, Button } from \"./ContactForm.styled\";\n\nexport function ContactForm() {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const nameId = uuidv4();\n  const telId = uuidv4();\n  const dispatch = useDispatch();\n\n  const handleChange = (evt) => {\n    const { name, value } = evt.currentTarget;\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n\n      case \"number\":\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n    };\n    \n    const handleSubmit = (evt) => {\n      evt.preventDefault();\n      dispatch(addContact({name, number}))\n      resetForm();\n   };\n\n   const resetForm = () => {\n    setName(\"\");\n    setNumber(\"\");\n   };\n  return (\n      <Form onSubmit={handleSubmit}>\n        <Label htmlFor={nameId}> Name\n          <Input\n            id={nameId}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handleChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            placeholder=\"Enter contact name\"\n            required\n          />\n        </Label>\n\n        <Label htmlFor={telId}> Phone Number\n          <Input\n            id={telId}\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={handleChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять из цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            placeholder=\"Enter phone number\"\n            required\n          />\n        </Label>\n\n        <Button type=\"submit\">\n          Add contact\n        </Button>\n      </Form>\n    );\n}","import styled from \"@emotion/styled\";\n\nexport const List = styled.ul`\ndisplay: flex;\nflex-direction: column;\nwidth: 800px;\n\n`;\n\nexport const Item = styled.li`\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\nmargin-bottom: 25px;\nfont-size: 24px;\n\n`;\n\nexport const Button = styled.button`\n  min-width: 100px;\n  height: 30px;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 12px;\n  color: #fff;\n  text-transform: uppercase;\n  background-color: #ff0d82;\n  box-shadow: 0px 0px 8px 0px rgba(34, 60, 80, 0.2);\n  border: none;\n \n`;","import { useSelector, useDispatch } from \"react-redux\";\nimport { List, Item, Button } from \"./ContactList.styled\";\nimport { removeContact } from \"../../redux/contacts/contacts-actions\";\n\n\n\nexport function ContactList() {\n    const contacts = useSelector((state) =>\n        // state.items\n         state.items.filter(item => item.name.toLowerCase().includes(state.filter.toLowerCase()))  \n    );\n    const dispatch = useDispatch();\n\n    return (\n        <List>\n            {contacts.map(({ id, name, number }) => (\n                <Item key={id}>\n                    {name}: {number}\n                    <Button onClick={() => dispatch(removeContact(id))}>\n                        Delete\n                    </Button>\n                </Item>\n            ))}\n        </List>\n    )\n}\n\n","import styled from \"@emotion/styled/macro\";\n\nexport const Input = styled.input`\n  border: 1px solid #ff0d82;\n  border-radius: 4px;\n  font-size: 16px;\n  height: 40px;\n  margin-top: 10px;\n  &:focus {\n      outline: none;\n      border: 1px solid #9e1878;\n  }\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  width: 400px;\n  margin-bottom: 20px;\n\n`;","// import PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Label, Input } from \"./Filter.styled\";\nimport { filterContacts } from \"../../redux/contacts/contacts-actions\";\n\nexport function Filter() {\n    const value = useSelector((state) => state.filter);\n    const dispatch = useDispatch();\n    return (\n        <Label>Find contacts by name\n            <Input\n                type=\"text\"\n                value={value}\n                onChange={(e) => dispatch(filterContacts(e.currentTarget.value))}\n                placeholder=\"Enter contact name\"/>\n        </Label>\n    )\n}\n\n// Filter.propTypes = {\n//     filterValue: PropTypes.string,\n//     onChange: PropTypes.func,\n// }\n\n// export default Filter;","import styled from \"@emotion/styled\";\n\nexport const MainTitle = styled.h2`\n  text-align: center;\n  padding-top: 15px;\n  padding-bottom: 15px;\n  color: #9e1878;\n`;","import PropTypes from \"prop-types\";\nimport { MainTitle } from \"./Title.styled\";\n\nexport function Title({ title }) {\n    return (\n         <MainTitle>{title}</MainTitle>\n    )\n}\n\nTitle.propTypes = {\n    title: PropTypes.string.isRequired,\n};\n\n","import { ToastContainer } from 'react-toastify';\nimport { Main, Section, MainTitle } from './App.styled';\nimport { ContactForm } from \"../components/ContactForm/ContactForm\";\nimport { ContactList } from \"../components/ContactList/ContactList\";\nimport { Filter } from \"../components/Filter/Filter\";\nimport { Title } from \"../components/Title/Title\";\n\nexport default function App() {\n\n  return (\n    <>\n      <MainTitle>Phonebook</MainTitle>\n      <Main>\n        <Section>\n          <Title title={\"Add contact\"} />\n          <ContactForm/>\n        </Section>\n        <Section>\n          <Title title=\"Search contact\" />\n          <Filter />\n        </Section>\n        <Section>\n          <Title title=\"Contacts\"/>\n          <ContactList />\n        </Section>\n      </Main>\n      <ToastContainer />\n      </>\n  )\n}\n\n\n\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport defaultContacts from '../../data/defaultContacts.json'\n// import contactsTypes from \"./contacts-types\"; /* ====== REDUX ======*/\nimport { addContact, removeContact, filterContacts } from \"./contacts-actions\";\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst initContacts = JSON.parse(localStorage.getItem(\"contacts\")) ?? defaultContacts;\nconst initFilter = '';\n\nconst checkContact = (contacts, name) => {\n    const existingName = contacts.find(\n        (contact) => contact.name.toLowerCase() === name.toLowerCase()\n    );\n    if (existingName) {\n        toast.info('Contact with such name already exists');\n        return existingName;\n    }\n};\n\n//========== REDUX TOOLKIT ===========\nconst addItem = (state, action) => {\n  const existingСontact = checkContact(state, action.payload.name);\n    if (existingСontact) {\n        return state;\n    }\n    localStorage.setItem(\"contacts\", JSON.stringify([action.payload, ...state]));\n    return [action.payload, ...state];\n};\n\nconst removeItem = (state, action) => {\n    const contacts = state.filter(item => item.id !== action.payload);\n    localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n    return contacts\n};\n\nconst filterItem = (state, action) => {\n    return action.payload;\n};\n\nconst itemReducer = createReducer(initContacts, {\n  [addContact]: addItem,\n  [removeContact]: removeItem,\n});\n\nconst filterReducer = createReducer(initFilter, {\n  [filterContacts]: filterItem,\n});\n\n\n//=========== REDUX ===================\n\n\n// const itemReducer = (state = initContacts, action) => {\n//     switch (action.type) {\n//         case contactsTypes.ADD:\n//             const existingСontact = checkContact(state, action.payload.name);\n//             if (existingСontact) {\n//                 return state;\n//             }\n//             localStorage.setItem(\"contacts\", JSON.stringify([action.payload, ...state]));\n//             return [action.payload, ...state];\n//         case contactsTypes.REMOVE:\n//             const contacts = state.filter(item => item.id !== action.payload);\n//             localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n//             return contacts\n//         default:\n//             return state;\n//     }\n// };\n\n// const filterReducer = (state = initFilter, action) => {\n//     switch (action.type) {\n//         case contactsTypes.FILTER:\n//             return action.payload;\n//         default:\n//             return state;\n//     }\n// };\n\nconst rootReducer = combineReducers({\n    items: itemReducer,\n    filter: filterReducer,\n    }\n);\nexport default rootReducer","// import { createStore } from \"redux\"; /* ====== REDUX ======*/\n// import { devToolsEnhancer } from \"redux-devtools-extension\"; /* ====== REDUX ======*/\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport rootReducer from \"./contacts/contacts-reducer\";\n\n//=========== REDUX ===============\n// const store = createStore(rootReducer, devToolsEnhancer());\n\n//========== REDUX TOOLKIT =========\nconst store = configureStore({\n    reducer: rootReducer,\n    devtools: process.env.NODE_ENV !== 'production'\n})\n// console.log(store)\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App/App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store = {store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}